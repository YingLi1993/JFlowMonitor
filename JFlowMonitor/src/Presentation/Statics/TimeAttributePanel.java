/*
 * This file is written by reyoung, reyoung@126.com.
 */

/*
 * TimeAttributePanel.java
 *
 * Created on 2011-5-26, 16:21:47
 */
package Presentation.Statics;

import Logic.History.HistoryInfo;
import Logic.History.ProcessCompleteListener;
import Logic.History.ProcessThread;
import Logic.History.TimeAttributeHistoryInfo;
import java.awt.Dialog;
import java.awt.Point;
import java.util.Date;
import java.util.Locale;
import javax.swing.JDialog;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import sun.nio.cs.HistoricallyNamedCharset;
import org.jfree.chart.plot.Plot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PolarPlot;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.xy.DefaultXYDataset;
import org.jfree.data.xy.XYDataset;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

/**
 *
 * @author Reyoung
 */
public class TimeAttributePanel extends javax.swing.JPanel implements ProcessCompleteListener {

    /** Creates new form TimeAttributePanel */
    public TimeAttributePanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ToDayLbl = new javax.swing.JTextField();
        ToMonthLbl = new javax.swing.JTextField();
        ToYearLbl = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        FromYearLbl = new javax.swing.JTextField();
        FromMonthLbl = new javax.swing.JTextField();
        FromDayLbl = new javax.swing.JTextField();
        ui_checkBtn = new javax.swing.JButton();
        ui_resultPanel = new javax.swing.JPanel();

        ToDayLbl.setText("1");

        ToMonthLbl.setText("6");

        ToYearLbl.setText("2011");

        jLabel2.setText("ToDate:");

        jLabel1.setText("FromDate:");

        FromYearLbl.setText("2011");

        FromMonthLbl.setText("5");

        FromDayLbl.setText("1");

        ui_checkBtn.setText("Check");
        ui_checkBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ui_checkBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ui_resultPanelLayout = new javax.swing.GroupLayout(ui_resultPanel);
        ui_resultPanel.setLayout(ui_resultPanelLayout);
        ui_resultPanelLayout.setHorizontalGroup(
            ui_resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 373, Short.MAX_VALUE)
        );
        ui_resultPanelLayout.setVerticalGroup(
            ui_resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 194, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ui_resultPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(FromYearLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(FromMonthLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ToYearLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ToMonthLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ToDayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100)
                                .addComponent(ui_checkBtn))
                            .addComponent(FromDayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(FromYearLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromMonthLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromDayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ToYearLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToMonthLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToDayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ui_checkBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ui_resultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ui_checkBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ui_checkBtnActionPerformed
        String fd_s = this.FromDayLbl.getText();
        String fm_s = this.FromMonthLbl.getText();
        String fy_s = this.FromYearLbl.getText();
        String td_s = this.ToDayLbl.getText();
        String tm_s = this.ToMonthLbl.getText();
        String ty_s = this.ToYearLbl.getText();
        try {
            int fd = Integer.parseInt(fd_s);
            int fm = Integer.parseInt(fm_s);
            int fy = Integer.parseInt(fy_s);
            int td = Integer.parseInt(td_s);
            int tm = Integer.parseInt(tm_s);
            int ty = Integer.parseInt(ty_s);
            Date from = new Date(fy - 1900, fm - 1, fd);
            Date to = new Date(ty - 1900, tm - 1, fd);
            ProcessThread p = new ProcessThread(this, new TimeAttributeHistoryInfo(from, to));
            p.start();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_ui_checkBtnActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FromDayLbl;
    private javax.swing.JTextField FromMonthLbl;
    private javax.swing.JTextField FromYearLbl;
    private javax.swing.JTextField ToDayLbl;
    private javax.swing.JTextField ToMonthLbl;
    private javax.swing.JTextField ToYearLbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton ui_checkBtn;
    private javax.swing.JPanel ui_resultPanel;
    // End of variables declaration//GEN-END:variables

    public void onProcessComplete(HistoryInfo info) {
        if (info instanceof TimeAttributeHistoryInfo) {
            TimeAttributeHistoryInfo tinfo = (TimeAttributeHistoryInfo) info;

            XYSeries ser = new XYSeries("Bytes of Time");
            for (int i = 0; i < tinfo.TimeBytes.length; ++i) {
                ser.add(i, tinfo.TimeBytes[i]);
            }
            XYSeriesCollection dataset = new XYSeriesCollection(ser);
            JFreeChart chart = ChartFactory.createXYLineChart(
                    "Time Attribute", //  chart  title
                    "Byte", //  x  axis  label
                    "Time", //  y  axis  label
                    dataset, //  data
                    PlotOrientation.VERTICAL,
                    true, //  include  legend
                    true, //  tooltips
                    false //  urls
                    );
            if(ui_resultPanel!=null){
                Point loc = ui_resultPanel.getLocation();
                int w = ui_resultPanel.getWidth();
                int h = ui_resultPanel.getHeight();
                ChartPanel cp = new ChartPanel(chart);
                cp.setLocation(loc);
                cp.setSize(w, h);
                ui_resultPanel.setVisible(false);
                this.remove(ui_resultPanel);
                ui_resultPanel = cp;
            }
            this.add(ui_resultPanel);
            ui_resultPanel.setVisible(true);
        }
    }
}
