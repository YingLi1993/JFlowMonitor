class TimeSeriesChartPanel
!!!157058.java!!!	TimeSeriesChartPanel(in historyCount : int, inout det : boolean)
        super(new BorderLayout());
// create two series that automatically discard data more than 30
// seconds old...
        this.upload = new TimeSeries("Upload", Millisecond.class);
        this.upload.setMaximumItemAge(historyCount);
        this.upinn = new TimeSeries("UpInner", Millisecond.class);
        this.upinn.setMaximumItemAge(historyCount);
        this.upout = new TimeSeries("UpOuter", Millisecond.class);
        this.upout.setMaximumItemAge(historyCount);
        this.down = new TimeSeries("Download", Millisecond.class);
        this.down.setMaximumItemAge(historyCount);
        this.dninn = new TimeSeries("DownInner", Millisecond.class);
        this.dninn.setMaximumItemAge(historyCount);
        this.dnout = new TimeSeries("DownOuter", Millisecond.class);
        this.dnout.setMaximumItemAge(historyCount);

        TimeSeriesCollection dataset = new TimeSeriesCollection();
        TimeSeriesCollection dataset2 = new TimeSeriesCollection();
        dataset.addSeries(this.upload);
        dataset2.addSeries(this.down);
        dataset.addSeries(this.upinn);
        dataset.addSeries(this.upout);
        dataset2.addSeries(this.dninn);
        dataset2.addSeries(this.dnout);
        DateAxis domain;
        NumberAxis range;
        domain = new DateAxis("Time(s)");
        range = new NumberAxis("Flow(kb)");
        domain.setTickLabelFont(new Font("SansSerif", Font.PLAIN, 12));
        range.setTickLabelFont(new Font("SansSerif", Font.PLAIN, 12));
        domain.setLabelFont(new Font("SansSerif", Font.PLAIN, 14));
        range.setLabelFont(new Font("SansSerif", Font.PLAIN, 14));
        XYItemRenderer renderer = new XYLineAndShapeRenderer(true, false);
        renderer.setSeriesPaint(0, Color.red);
        renderer.setSeriesPaint(1, Color.green);

        renderer.setStroke(
                new BasicStroke(3f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL));
        XYPlot plot = new XYPlot(dataset, domain, range, renderer);
        plot.setBackgroundPaint(Color.white);
        plot.setDomainGridlinePaint(Color.DARK_GRAY);
        plot.setRangeGridlinePaint(Color.DARK_GRAY);
        plot.setAxisOffset(new RectangleInsets(5.0, 5.0, 5.0, 5.0));
        
        XYPlot plot2 = new XYPlot(dataset2, domain, range, renderer);
        plot2.setBackgroundPaint(Color.white);
        plot2.setDomainGridlinePaint(Color.DARK_GRAY);
        plot2.setRangeGridlinePaint(Color.DARK_GRAY);
        plot2.setAxisOffset(new RectangleInsets(5.0, 5.0, 5.0, 5.0));

        domain.setAutoRange(true);
        domain.setLowerMargin(0.0);
        domain.setUpperMargin(0.0);
        domain.setTickLabelsVisible(true);
        range.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
        range.setAutoRange(true);

//        range.setAutoRangeMinimumSize(+100);
//        range.setLowerBound(0);
//        range.setLowerMargin(0.0);
//        range.setUpperMargin(0.5);
        JFreeChart chart = new JFreeChart(
                "实时上传流量监控",
                new Font("SansSerif", Font.BOLD, 16),
                plot,
                true);
        JFreeChart chart2 = new JFreeChart(
                "实时下载流量监控",
                new Font("SansSerif", Font.BOLD, 16),
                plot2,
                true);

//        chart.setBackgroundPaint(Color.lightGray);
//        ChartPanel chartPanel = new ChartPanel(chart);

//        chartPanel.setBorder(BorderFactory.createCompoundBorder(
//                BorderFactory.createEmptyBorder(4, 4, 4, 4),
//                BorderFactory.createLineBorder(Color.black)));
//        add(chartPanel);
        JPanel panel = new JPanel(new GridLayout(2, 1));
        panel.add(new ChartPanel(chart));
        panel.add(new ChartPanel(chart2));
        add(panel);

        for (int i = 0; i < 90; i++) {
            this.upload.add(new Millisecond(i, new Second()), 0);
            this.upinn.add(new Millisecond(i, new Second()), 0);
            this.upout.add(new Millisecond(i, new Second()), 0);
            this.down.add(new Millisecond(i, new Second()), 0);
            this.dninn.add(new Millisecond(i, new Second()), 0);
            this.dnout.add(new Millisecond(i, new Second()), 0);
        }
!!!157186.java!!!	addUploadObservation(in y : double) : void
        this.upload.add(new Millisecond(), y);
!!!157314.java!!!	addUpinnObservation(in y : double) : void
        this.upinn.add(new Millisecond(), y);
!!!157442.java!!!	addUpoutObservation(in y : double) : void
        this.upout.add(new Millisecond(), y);
!!!157570.java!!!	addDownloadObservation(in y : double) : void
        this.down.add(new Millisecond(), y);
!!!157698.java!!!	addDowninnObservation(in y : double) : void
        this.dninn.add(new Millisecond(), y);
!!!157826.java!!!	addDownoutObservation(in y : double) : void
        this.dnout.add(new Millisecond(), y);
