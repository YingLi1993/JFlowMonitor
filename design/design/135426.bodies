class HistoryFlowPanel
!!!152322.java!!!	HistoryFlowPanel()
        String[] colName = {"Date", "InnerFlow(KB)", "OuterFlow(KB)"};
        tableModel = new DefaultTableModel(colName, 0);
        initComponents();
//        TableModel tableModel =HistoryTable.getModel();
//        HistoryTable.setModel(tableModel);
!!!152450.java!!!	initComponents() : void

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        FromYearLbl = new javax.swing.JTextField();
        FromMonthLbl = new javax.swing.JTextField();
        FromDayLbl = new javax.swing.JTextField();
        ToYearLbl = new javax.swing.JTextField();
        ToMonthLbl = new javax.swing.JTextField();
        ToDayLbl = new javax.swing.JTextField();
        CheckBtn = new javax.swing.JButton();
        ErrorLbl = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        HistoryTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        ChargeLbl = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("FromDate:");

        jLabel2.setText("ToDate:");

        FromYearLbl.setText("2011");
        FromYearLbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FromYearLblActionPerformed(evt);
            }
        });

        FromMonthLbl.setText("5");
        FromMonthLbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FromMonthLblActionPerformed(evt);
            }
        });

        FromDayLbl.setText("1");
        FromDayLbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FromDayLblActionPerformed(evt);
            }
        });

        ToYearLbl.setText("2011");
        ToYearLbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToYearLblActionPerformed(evt);
            }
        });

        ToMonthLbl.setText("6");
        ToMonthLbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToMonthLblActionPerformed(evt);
            }
        });

        ToDayLbl.setText("1");
        ToDayLbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToDayLblActionPerformed(evt);
            }
        });

        CheckBtn.setText("Check");
        CheckBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBtnActionPerformed(evt);
            }
        });

        HistoryTable.setModel(this.tableModel);
        jScrollPane2.setViewportView(HistoryTable);

        jLabel3.setText("ChargePerKB($):");

        ChargeLbl.setText("0.001");
        ChargeLbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChargeLblActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(FromYearLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(FromMonthLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ToYearLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ToMonthLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ToDayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FromDayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(ErrorLbl))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ChargeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CheckBtn)))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(FromYearLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromMonthLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FromDayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ErrorLbl))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ToYearLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToMonthLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ToDayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CheckBtn)
                    .addComponent(jLabel3)
                    .addComponent(ChargeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
!!!152578.java!!!	FromYearLblActionPerformed(inout evt : java.awt.event.ActionEvent) : void
//GEN-FIRST:event_FromYearLblActionPerformed
        // TODO add your handling code here:
!!!152706.java!!!	FromMonthLblActionPerformed(inout evt : java.awt.event.ActionEvent) : void
//GEN-FIRST:event_FromMonthLblActionPerformed
        // TODO add your handling code here:
!!!152834.java!!!	FromDayLblActionPerformed(inout evt : java.awt.event.ActionEvent) : void
//GEN-FIRST:event_FromDayLblActionPerformed
        // TODO add your handling code here:
!!!152962.java!!!	ToYearLblActionPerformed(inout evt : java.awt.event.ActionEvent) : void
//GEN-FIRST:event_ToYearLblActionPerformed
        // TODO add your handling code here:
!!!153090.java!!!	ToMonthLblActionPerformed(inout evt : java.awt.event.ActionEvent) : void
//GEN-FIRST:event_ToMonthLblActionPerformed
        // TODO add your handling code here:
!!!153218.java!!!	ToDayLblActionPerformed(inout evt : java.awt.event.ActionEvent) : void
//GEN-FIRST:event_ToDayLblActionPerformed
        // TODO add your handling code here:
!!!153346.java!!!	CheckBtnActionPerformed(inout evt : java.awt.event.ActionEvent) : void
//GEN-FIRST:event_CheckBtnActionPerformed
        String fyear, fmonth, fday, tyear, tmonth, tday;
        fyear = FromYearLbl.getText();
        fmonth = FromMonthLbl.getText();
        fday = FromDayLbl.getText();
        tyear = ToYearLbl.getText();
        tmonth = ToMonthLbl.getText();
        tday = ToDayLbl.getText();
        if (fyear.isEmpty() || fmonth.isEmpty() || fday.isEmpty() || tyear.isEmpty() || tmonth.isEmpty() || tday.isEmpty()) {
            ErrorLbl.setText("Error FromDate or ToDate");
            return;
        }
        ErrorLbl.setText("");
        int fy, fm, fd, ty, tm, td;
        try {
            fy = Integer.parseInt(fyear);
            fy -= 1900;
            fm = Integer.parseInt(fmonth);
            fm--;
            fd = Integer.parseInt(fday);
            ty = Integer.parseInt(tyear);
            ty -= 1900;
            tm = Integer.parseInt(tmonth);
            tm--;
            td = Integer.parseInt(tday);
        } catch (NumberFormatException e) {
            ErrorLbl.setText("input error:date has wrong");
            return;
        }
        Date fdate = new Date(fy, fm, fd);
        Date tdate = new Date(ty, tm, td);
        fhis = new FlowHistoryInfo(fdate, tdate);
        ProcessThread pt = new ProcessThread(new ProcessCompleteListener() {

            public void onProcessComplete(HistoryInfo info) {
                tableshow();
            }
        }, fhis);
        pt.start();
!!!153474.java!!!	ChargeLblActionPerformed(inout evt : java.awt.event.ActionEvent) : void
//GEN-FIRST:event_ChargeLblActionPerformed
        // TODO add your handling code here:
!!!153602.java!!!	tableshow() : void
        int rowNum = this.fhis.Data.size();
        tableModel.setRowCount(rowNum + 2);
        long total_in = 0;
        long total_out = 0;
        int rowNo = 0;
        for (Flow tf : fhis.Data.values()) {
            ;
            total_in += tf.innerSize;
            total_out += tf.outerSize;
            tableModel.setValueAt(tf.sDate.toString(), rowNo, 0);
            tableModel.setValueAt(Long.toString(tf.innerSize), rowNo, 1);
            tableModel.setValueAt(Long.toString(tf.outerSize), rowNo, 2);
            rowNo++;
        }
        tableModel.setValueAt("TotalFlow", rowNo, 0);
        tableModel.setValueAt(Long.toString(total_in), rowNo, 1);
        tableModel.setValueAt(Long.toString(total_out), rowNo, 2);
        double cost = 0.001;
        if (!ChargeLbl.getText().equals("")) {
            cost = Double.parseDouble(ChargeLbl.getText());
        }
        cost = total_out * cost;
        tableModel.setValueAt("TotalCharge", rowNo + 1, 0);
        tableModel.setValueAt("", rowNo + 1, 1);
        tableModel.setValueAt(cost, rowNo + 1, 2);
        //HistoryTable.setModel(tableModel);
